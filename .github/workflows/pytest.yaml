name: scikit_mol ci

on: [push, pull_request]

jobs:
  # run pytests for scikit_mol
  tests:
    name: pytest ${{ matrix.os }}::py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 6
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest]
        python-version: ["3.10"]
        include:
          # test python version compatibility on linux only
          - os: ubuntu-latest
            python-version: 3.13
          - os: ubuntu-latest
            python-version: 3.12
          - os: ubuntu-latest
            python-version: 3.11
          - os: ubuntu-latest
            python-version: 3.10
          - os: ubuntu-latest
            python-version: 3.9
    steps:
      - name: Checkout scikit_mol
        uses: actions/checkout@v4
      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install scikit_mol
        run: uv sync --dev
      - name: Cache tests/data
        uses: actions/cache@v4
        with:
          path: tests/data
          key: ${{ runner.os }}-${{ hashFiles('tests/conftest.py') }}
      - name: Run Tests
        run: uv run pytest --cov=./scikit_mol .

  # # deploy scikit_mol to pypi for tagged commits if tests pass
  # deploy:
  #   needs: [tests]
  #   name: deploy to pypi
  #   runs-on: ubuntu-latest
  #   # this checks that the commit is a tagged commit
  #   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - name: Set up Python with uv
  #       uses: astral-sh/setup-uv@v5
  #       with:
  #         python-version: 3.8
  #     - name: Build a binary wheel and a source tarball
  #       run: |
  #         uv build
  #     # push all tagged versions to pypi.org
  #     - name: Publish package to PyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         user: __token__
  #         password: ${{ secrets.pypi_password }}
